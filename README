
This is yet another pam_ldap module. 

The advantages of this particular version are:

   o Support for changing passwords in LDAP

   o Support for the V3 client API and protocol (to minimize
     rebinds)

   o Support for Netscape's SSL API (untested as of yet)

   o Compatibility with the nss_ldap configuration file format

   o Supports ypldapd LDAP locator for plug-and-play installation

   o Supports Netscape Directory Server password policies and
     password expiration controls

   o Supports access authorization on the "host" attribute of the
     account objectclass, and on group membership

   o Supports generating crypted hashes locally for use with
     OpenLDAP and other University of Michigan derived LDAP 
     servers

   o Bundled with Debian (Potato) and RedHat (Rawhide)
     distributions.

The module builds under both Linux 2.x and Solaris 2.6.

Thanks to fellow Aussie Chris Albone who wrote the initial
pam_ldap_auth module.

I am indebted to Doug Nazar for his contributions to
this software.

I've tested this with Netscape Directory Server 3.1 under NT and
Solaris, the University of Michigan LDAP server, and Microsoft's
Exchange Server.

pam_ldap is only secure if used with a secure SASL mechanism (like
CRAM-MD5) or with transport security (like SSL/TLS). With simple
authentication, it is less secure than using UNIX hashed passwords,
because the LDAP bind request sends the password in the clear.

Here are some possible deployment scenarios:

   o pam_ldap with account information in /etc flat files,
     kept manually in sync with LDAP

   o pam_ldap with account information in LDAP, using 
     nss_ldap

   o pam_ldap with account information in NIS, using
     ypldapd

FAQS
====

Don't forget to ensure that pam_ldap's link dependencies are
satisfied after installation (you can verify this by doing
ldd /usr/lib/security/pam_ldap.so.1). You must ensure that
any libraries that it depends on (such as the LDAP client
library) can be located by the dynamic linker. Otherwise,
libpam may fail to load the pam_ldap module.

Q: Why does linking fail on Solaris (complaining about
relocations remaining against libcrypt)? David Begley
writes:

The link command that used to work (from pam_ldap-46, with the appropriate
paths for the local libraries here):

  ld -M mapfile -G -h pam_ldap.so.1 -z text -Bsymbolic \
    -R/usr/local/ldapsdk4/lib -R/usr/ucblib -lcrypt -lpam -lnsl -lpthread \
    -lresolv -o pam_ldap.so.1 dynamic/pam_ldap.o -L/usr/local/ldapsdk4/lib \
    -lldapssl40

I just tried this with pam_ldap-72:

  ld -M mapfile -G -h pam_ldap.so.1 -z text -Bsymbolic \
    -R/usr/local/ldapsdk4/lib -R/usr/ucblib -lcrypt -lpam -lnsl -lpthread \
    -lresolv -o pam_ldap.so.1 pam_ldap.o md5.o -L/usr/local/ldapsdk4/lib \
    -lldapssl40

and it at least links cleanly this time (haven't tried to use it yet).  I even
dropped "-lcrypt" completely and the exact same binary was output so I don't
think it's even necessary (this is on Solaris 2.6), at least not with the
Netscape LDAP library anyway.

Try this - search your Makefile for "--shared" and change it to "-G" before
trying to relink/rebuild;  Solaris 7 has a shared libcrypt whereas Solaris 2.6
does not.  The GCC manual says "-shared" (note, one dash - there's no
documented option with two dashes) will produce a shared object but appears to
have the side-effect of requiring all "-l" linked libraries to also be shared
(whereas using "-G" doesn't have this problem).

Q: Where is ldap_ssl.h? It's in the Netscape LDAP
C SDK. Download it from developer.netscape.com. If you
don't want to use SSL, removed -DSSL from CFLAGS. I
don't have any experience building with the SSL/TLS
support in OpenLDAP.

Q: I get an undefined symbol "re_comp" under
FreeBSD. Try linking against libgnuregex (set
LDFLAGS=-lgnuregex before configuring).

Q: I get undefined symbols "pam_sm_authenticate"
&c. Make sure that you compile with -DPIC, eg:
CFLAGS=-DPIC LDFLAGS=-lgnuregex ./configure

SUPPORT
=======

To discuss pam_ldap and related technologies, you may
subscribe to the following mailing lists:    

        <URL:mailto:pamldap-request@padl.com>
and
        <URL:mailto:ldap-nis-request@padl.com>

Send an electronic mail message with "subscribe" in the
message body to join the list.

Note that PADL now offer commercial support on a
per-incident basis.      

To request a support incident, send email to:

	<URL:mailto:pamldap-support@padl.com>

--
PADL Software Pty Ltd
pamldap-support@padl.com
http://www.padl.com/

